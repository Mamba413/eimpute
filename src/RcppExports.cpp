// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// trun_svd
Eigen::MatrixXd trun_svd(Eigen::MatrixXd X, int k);
RcppExport SEXP _eimpute_trun_svd(SEXP XSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(trun_svd(X, k));
    return rcpp_result_gen;
END_RCPP
}
// kkt_fix
List kkt_fix(Eigen::MatrixXi& omega, Eigen::VectorXd& X, int m, int n, int rank, int max_it, double tol, int type);
RcppExport SEXP _eimpute_kkt_fix(SEXP omegaSEXP, SEXP XSEXP, SEXP mSEXP, SEXP nSEXP, SEXP rankSEXP, SEXP max_itSEXP, SEXP tolSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXi& >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< int >::type max_it(max_itSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(kkt_fix(omega, X, m, n, rank, max_it, tol, type));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_eimpute_trun_svd", (DL_FUNC) &_eimpute_trun_svd, 2},
    {"_eimpute_kkt_fix", (DL_FUNC) &_eimpute_kkt_fix, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_eimpute(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
